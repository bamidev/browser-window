name: Rust

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master", "dev" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-nix:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: Install Nix
      run: sudo apt-get install -y nix-bin
    - uses: actions/checkout@v3
    - name: Build nix flake wth WebkitGtk
      run: nix build .#webkitgtk

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: Install development files
      run: sudo apt-get install -y libwebkit2gtk-4.1-dev mingw-w64 xvfb
    - uses: actions/checkout@v3
    - name: Set up CEF
      run: ${GITHUB_WORKSPACE}/get-cef.sh
    - name: Build with CEF
      run: CEF_PATH="${GITHUB_WORKSPACE}/cef/$(ls cef)" cargo build --release --verbose --features cef
    - name: Build with CEF (threadsafe)
      run: CEF_PATH="${GITHUB_WORKSPACE}/cef/$(ls cef)" cargo build --release --verbose --features cef,threadsafe
    - name: Run tests with CEF
      run: |
        CEF_PATH="${GITHUB_WORKSPACE}/cef/$(ls cef)" ${GITHUB_WORKSPACE}/setup-cef-files.sh
        chmod 4755 ${GITHUB_WORKSPACE}/target/debug/chrome-sandbox
        chown root:root ${GITHUB_WORKSPACE}/target/debug/chrome-sandbox
        CEF_PATH="${GITHUB_WORKSPACE}/cef/$(ls cef)" RUST_BACKTRACE=full RUST_LOG=debug xvfb-run cargo test --verbose --features cef,threadsafe  --lib --bins --tests
    - name: Build with WebkitGTK
      run: cargo build --release --verbose --features webkitgtk
    - name: Build with WebkitGTK (threadsafe)
      run: cargo build --release --verbose --features webkitgtk,threadsafe
    - name: Run tests with WebkitGTK
      run: RUST_BACKTRACE=full RUST_LOG=debug xvfb-run cargo test --verbose --features webkitgtk,threadsafe
    - name: Add x86_64-pc-windows-gnu target for Rust
      run: rustup target add x86_64-pc-windows-gnu
    - name: Build with Edge WebView2 (MinGW)
      run: cargo build --release --verbose --features edge2 --target=x86_64-pc-windows-gnu

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/checkout@v3
      #- name: Set up CEF
      #  shell: pwsh
      #  run: .\get-cef.ps1
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features edge2
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features edge2,threadsafe
