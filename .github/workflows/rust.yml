name: Rust

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master", "dev" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-nix:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: Install Nix
      run: sudo apt-get install -y nix-bin
    - uses: actions/checkout@v3
    - name: Build nix flake with WebkitGtk
      run: sudo nix --extra-experimental-features 'nix-command flakes' build .#webkitgtk
    - name: Test nix develop shell with WebkitGtk
      run: sudo nix --extra-experimental-features 'nix-command flakes' develop .#webkitgtk --command cargo test --verbose --features webkitgtk,no-gui-tests
    - name: Test nix develop shell with WebkitGtk (threadsafe)
      run: sudo nix --extra-experimental-features 'nix-command flakes' develop .#webkitgtk --command cargo test --verbose --features webkitgtk,threadsafe,no-gui-tests
    - name: Test nix develop shell with WebkitGtk (release)
      run: sudo nix --extra-experimental-features 'nix-command flakes' develop .#webkitgtk --command cargo test --release --verbose --features webkitgtk,no-gui-tests
    - name: Test nix develop shell with WebkitGtk (release, threadsafe)
      run: sudo nix --extra-experimental-features 'nix-command flakes' develop .#webkitgtk --command cargo test --release --verbose --features webkitgtk,threadsafe,no-gui-tests
    - name: Build nix flake with CEF
      run: sudo nix --extra-experimental-features 'nix-command flakes' build .#cef
    - name: Test nix develop shell with CEF
      run: sudo nix --extra-experimental-features 'nix-command flakes' develop .#cef --command cargo test --verbose --features cef,no-gui-tests
    - name: Test nix develop shell with CEF (threadsafe)
      run: sudo nix --extra-experimental-features 'nix-command flakes' develop .#cef --command cargo test --verbose --features cef,no-gui-tests,threadsafe
    - name: Test nix develop shell with CEF (release)
      run: sudo nix --extra-experimental-features 'nix-command flakes' develop .#cef --command cargo test --release --verbose --features cef,no-gui-tests
    - name: Test nix develop shell with CEF (release, threadsafe)
      run: sudo nix --extra-experimental-features 'nix-command flakes' develop .#cef --command cargo test --release --verbose --features cef,no-gui-tests,threadsafe

  build-ubuntu:
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash
    steps:
    - name: Install development files
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libavahi-client-dev libcups2-dev libdbus-1-dev libdrm-dev libexpat1-dev libgbm-dev libgnutls28-dev libgtk-3-dev libnss3-dev libwebkit2gtk-4.1-dev libx11-dev libx11-xcb-dev libxcomposite-dev libxdamage-dev libxext-dev libxfixes-dev libxkbcommon-dev libxrandr-dev xvfb mingw-w64
    - uses: actions/checkout@v3
    - name: Run tests with WebkitGTK (debug)
      run: RUST_BACKTRACE=full RUST_LOG=debug cargo test --verbose --features webkitgtk,no-gui-tests
    - name: Run tests with WebkitGTK (debug, threadsafe)
      run: RUST_BACKTRACE=full RUST_LOG=debug cargo test --verbose --features webkitgtk,threadsafe,no-gui-tests
    - name: Run tests with WebkitGTK (release)
      run: RUST_BACKTRACE=full RUST_LOG=debug cargo test --release --verbose --features webkitgtk,no-gui-tests
    - name: Run tests with WebkitGTK (release, threadsafe)
      run: RUST_BACKTRACE=full RUST_LOG=debug cargo test --release --verbose --features webkitgtk,threadsafe,no-gui-tests
    - name: Set up CEF
      run: |
        ${GITHUB_WORKSPACE}/get-cef.sh
        CEF_PATH="${GITHUB_WORKSPACE}/cef/$(ls cef)" ${GITHUB_WORKSPACE}/setup-cef-files.sh
        sudo chmod 4755 ${GITHUB_WORKSPACE}/target/debug/chrome-sandbox
        sudo chmod 4755 ${GITHUB_WORKSPACE}/target/release/chrome-sandbox
        sudo chown root:root ${GITHUB_WORKSPACE}/target/debug/chrome-sandbox
        sudo chown root:root ${GITHUB_WORKSPACE}/target/release/chrome-sandbox
    - name: Run tests with CEF (debug)
      run: CEF_PATH="${GITHUB_WORKSPACE}/cef/$(ls cef)" RUST_BACKTRACE=full RUST_LOG=debug cargo test --verbose --features cef,threadsafe,no-gui-tests
    - name: Run tests with CEF (debug, threadsafe)
      run: CEF_PATH="${GITHUB_WORKSPACE}/cef/$(ls cef)" RUST_BACKTRACE=full RUST_LOG=debug cargo test --verbose --features cef,threadsafe,no-gui-tests
    - name: Run tests with CEF (release)
      run: CEF_PATH="${GITHUB_WORKSPACE}/cef/$(ls cef)" RUST_BACKTRACE=full RUST_LOG=debug cargo test --release --verbose --features cef,threadsafe,no-gui-tests
    - name: Run tests with CEF (release, threadsafe)
      run: CEF_PATH="${GITHUB_WORKSPACE}/cef/$(ls cef)" RUST_BACKTRACE=full RUST_LOG=debug cargo test --release --verbose --features cef,threadsafe,no-gui-tests
    - name: Build with Edge WebView2 using MinGW (debug)
      run: |
        rustup target add x86_64-pc-windows-gnu
        cargo build --verbose --features edge2 --target=x86_64-pc-windows-gnu
    - name: Build with Edge WebView2 using MinGW (debug, threadsafe)
      run: cargo build --verbose --features edge2,threadsafe --target=x86_64-pc-windows-gnu
    - name: Build with Edge WebView2 using MinGW (release)
      run: cargo build --release --verbose --features edge2 --target=x86_64-pc-windows-gnu
    - name: Build with Edge WebView2 using MinGW (release, threadsafe)
      run: cargo build --release --verbose --features edge2,threadsafe --target=x86_64-pc-windows-gnu

  build-windows:
    runs-on: windows-latest
    env:
      CEF_PATH: D:\a\browser-window\browser-window\cef\cef_binary_122.1.12+g6e69d20+chromium-122.0.6261.112_windows64_minimal
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/checkout@v3
      - name: Set up CEF
        shell: pwsh
        run: |
          .\get-cef.ps1
          .\setup-cef-files-github.bat
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --features cef
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features cef,no-gui-tests
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features cef,threadsafe,no-gui-tests
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --features cef,no-gui-tests
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --features cef,threadsafe,no-gui-tests
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features edge2
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features edge2,threadsafe
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --features edge2
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --features edge2,threadsafe
